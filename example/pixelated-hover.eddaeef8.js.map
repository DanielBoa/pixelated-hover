{"version":3,"sources":["src/pixelated-hover.ts"],"names":[],"mappings":";AAkEC,IAAA,EAAA,MAAA,KAAA,gBAAA,WAAA,IAAA,IAAA,EAAA,EAAA,EAAA,EAAA,EAAA,UAAA,OAAA,EAAA,EAAA,IAAA,GAAA,UAAA,GAAA,OAAA,IAAA,EAAA,MAAA,GAAA,EAAA,EAAA,IAAA,EAAA,EAAA,EAAA,EAAA,IAAA,IAAA,IAAA,EAAA,UAAA,GAAA,EAAA,EAAA,EAAA,EAAA,OAAA,EAAA,EAAA,IAAA,IAAA,EAAA,GAAA,EAAA,GAAA,OAAA,GAlEK,EAAS,SAAS,cAAc,UAChC,EAAM,EAAO,WAAW,MACxB,EAAS,EAAO,SAAS,iBAAiB,2BAC1C,EAAY,GAUlB,SAAS,EAAmB,EAAW,EAAW,GACxC,OAAA,GAAa,EAAR,GAAmB,EAAJ,EAG9B,SAAS,EAAa,EAAsB,EAAW,GAC7C,IAAA,EAAgB,EAAS,KAC3B,EAAI,EAAmB,EAAG,EADR,EAAS,OAE1B,OAAA,EAAK,MAAM,EAAG,EAAI,GAG3B,SAAS,IA2CR,IAAA,EAzCO,EADwB,KACR,cAChB,KAA+B,QAAjB,EAAA,EAAU,eAAO,IAAA,OAAA,EAAA,EAAE,iBAAkB,MACnD,EAAY,SAAS,cAAc,OAC1B,EAJe,KAIoB,MAAjB,EAJH,KAIoB,OAC5C,EAAO,KAAK,MAAM,EAAW,GAC7B,EAAO,KAAK,MAAM,EAAY,GAGpC,EAAO,MAAQ,EACf,EAAO,OAAS,EAChB,EAAI,UAX0B,KAWX,EAAG,EAAG,EAAU,GAK9B,IAJC,IAAA,EAAoB,EAAI,aAAa,EAAG,EAAG,EAAU,GAGrD,EAAqB,EAAI,gBAAgB,EAAM,GAC5C,EAAI,EAAG,EAAI,EAAM,IACnB,IAAA,IAAI,EAAI,EAAG,EAAI,EAAM,IAAK,CACvB,IAEA,EAAe,EAAa,EAFvB,KAAK,OAAQ,EAAI,GAAK,EAAc,EAAY,GAChD,KAAK,OAAQ,EAAI,GAAK,EAAc,EAAY,IACpD,EAAC,EAAA,GAAE,EAAC,EAAA,GAAE,EAAC,EAAA,GAAE,EAAC,EAAA,GACX,EAAI,EAAmB,EAAG,EAAG,GAEnC,EAAmB,KAAK,GAAS,EACjC,EAAmB,KAAK,EAAI,GAAK,EACjC,EAAmB,KAAK,EAAI,GAAK,EACjC,EAAmB,KAAK,EAAI,GAAK,EAKrC,EAAO,MAAQ,EACf,EAAO,OAAS,EAChB,EAAI,aAAa,EAAoB,EAAG,GAGxC,EAAU,MAAQ,EAClB,EAAU,OAAS,EACnB,EAAU,IAAM,EAAO,YACvB,EAAU,UAAU,IAAI,qCAExB,EAAU,YAAY,GA5DxB,EAAU,QAAQ,SAAC,GACX,IAAA,EAAM,EAAG,cAAc,OAExB,GAEL,EAAI,iBAAiB,OAAQ","file":"pixelated-hover.eddaeef8.js","sourceRoot":"..","sourcesContent":["const canvas = document.createElement('canvas');\r\nconst ctx = canvas.getContext('2d');\r\nconst instances = [...document.querySelectorAll('[data-pixelated-hover]')];\r\nconst pixelSize = 10;\r\n\r\ninstances.forEach((el) => {\r\n  const img = el.querySelector('img');\r\n\r\n  if (!img) return;\r\n\r\n  img.addEventListener('load', createPixelatedHover);\r\n});\r\n\r\nfunction getIndexFromCoords(x: number, y: number, width: number) {\r\n  return (y * (width * 4)) + (x * 4);\r\n}\r\n\r\nfunction getPixelData(imageData: ImageData, x: number, y: number) {\r\n  const { data, width } = imageData;\r\n  const i = getIndexFromCoords(x, y, width);\r\n  return data.slice(i, i + 4);\r\n}\r\n\r\nfunction createPixelatedHover() {\r\n  const img: HTMLImageElement = this;\r\n  const container = img.parentElement;\r\n  const pixelSize = +(container.dataset?.pixelatedHover || '20');\r\n  const pixelated = document.createElement('img');\r\n  const { width: domWidth, height: domHeight } = img;\r\n  const cols = Math.floor(domWidth / pixelSize);\r\n  const rows = Math.floor(domHeight / pixelSize);\r\n\r\n  // draw image to canvas to inspect it's imageData\r\n  canvas.width = domWidth;\r\n  canvas.height = domHeight;\r\n  ctx.drawImage(img, 0, 0, domWidth, domHeight);\r\n  const originalImageData = ctx.getImageData(0, 0, domWidth, domHeight);\r\n\r\n  // create pixelated imageData\r\n  const pixelatedImageData = ctx.createImageData(cols, rows);\r\n  for (let x = 0; x < cols; x++) {\r\n    for (let y = 0; y < rows; y++) {\r\n      const sx = Math.floor(((x + 1) * pixelSize) - (pixelSize / 2));\r\n      const sy = Math.floor(((y + 1) * pixelSize) - (pixelSize / 2));\r\n      const [r, g, b, a] = getPixelData(originalImageData, sx, sy);\r\n      const i = getIndexFromCoords(x, y, cols);\r\n\r\n      pixelatedImageData.data[i    ] = r;\r\n      pixelatedImageData.data[i + 1] = g;\r\n      pixelatedImageData.data[i + 2] = b;\r\n      pixelatedImageData.data[i + 3] = a;\r\n    }\r\n  }\r\n\r\n  // draw pixelated image to canvas\r\n  canvas.width = cols;\r\n  canvas.height = rows;\r\n  ctx.putImageData(pixelatedImageData, 0, 0);\r\n\r\n  // set src of pixelated img to base64 of pixelated imageData\r\n  pixelated.width = domWidth;\r\n  pixelated.height = domHeight;\r\n  pixelated.src = canvas.toDataURL();\r\n  pixelated.classList.add('__js-pixelated-hover__pixel-image');\r\n\r\n  container.appendChild(pixelated);\r\n}"]}